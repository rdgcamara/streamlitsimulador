name: Atualizar dados de ativos diariamente

# dá permissão de escrita no conteúdo para o GITHUB_TOKEN
permissions:
  contents: write

on:
  schedule:
    # 03:00 UTC => 00:00 BRT
    - cron: "0 3 * * *"
  workflow_dispatch: {} # permite rodar manualmente pela interface do GitHub

jobs:
  update-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install yfinance pandas pyarrow

      - name: Rodar buscar_ativos.py
        run: |
          python buscar_ativos.py

      - name: Commit e push se houver mudanças
        env:
          # garante que o token esteja disponível no ambiente do step
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # garantir que o push use explicitamente o token (evita problemas com forks/configs)
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git

          if ! git diff --quiet; then
            git add dados_close.parquet dados_dividendos.parquet || true
            git commit -m "Atualiza dados_close e dados_dividendos automaticamente [ci skip]" || echo "Sem alterações para commitar"
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "Nenhuma alteração detectada."
          fi
